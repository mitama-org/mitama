================
クイックスタート
================

システム担当者のあなた、お疲れ様です。多分忙しいであろうあなたのために、Mitamaを使うために最低限必要な知識をチャチャっとまとめてみました。ちょっとしたUnix系の環境があればすぐに使えるので、試しながら読んでみてくださいね。

インストール
================
MitamaはPythonパッケージとして開発されているので、pipでインストールすることができます。

.. code-block:: bash

    $ pip install mitama

下記のコマンドでバージョンが出てきたら、インストール成功です。Mitamaデビューおめでとうございます。

.. code-block:: bash

    $ mitama version
    2.0.0

無事インストールができたら、「プロジェクト」を作成してみましょう。プロジェクトとは、Mitamaを稼働させる時の単位で、プロジェクトごとにユーザーや組織の情報が生成されたり、アプリをインストールすることができます。アプリ内で使用するデータやリソースファイルもプロジェクトのフォルダ内に生成・設置されます。

.. code-block:: bash

    $ mitama new myfirstproject
    $ ls myfirstproject
    mitama.json

コマンドを叩くとディレクトリが作成され、中に :file:`mitama.json` というファイルが置いてあると思います。こいつは設定ファイルです。次の節で覗いてみましょう。

サーバーを立ち上げる
=========================
作成したプロジェクトのディレクトリに入り、サーバーを起動してみましょう。

.. code-block:: bash

    $ cd myfirstproject
    $ mitama run

デフォルトでは、8080番ポートでHTTPサーバーが起動します。http://localhost:8080にアクセスし、確認してください。

設定
=========================
プロジェクト内のmitama.jsonを開いてください。

.. code-block:: json

    {
      "apps": {
        "mitama.portal": {
          "path": "/"
        }
      }
    }

このファイルの中では、どのパッケージを、HTTPサーバーにおけるどのディレクトリで配信するかを設定します。デフォルトでは、Mitamaに標準で搭載されているポータルシステムである :program:`mitama.portal` パッケージが、ルートパスで配信されています。

試しに、以下の様に変更を加えてみてください。

.. code-block:: json

    {
      "apps": {
        "mitama.portal": {
          "path": "/portal"
        }
      }
    }

変更したら、サーバーを一度Ctrl-Cで止め、再度起動してみましょう。するとルートでは404エラーが表示され、ポータルはhttp://localhost:8080/portalで配信されるようになるはずです。

もし有志の方が作ったアプリや自作のものを動かすときには、portalと同じ様にapps下にアプリの情報を書き加えてください。

.. code-block:: json

    {
      "apps": {
        "mitama.portal": {
          "path": "/"
        },
        "NewPackageName": {
          "path": "/newapppath"
        }
      }
    }

アプリはpipでインストールすることもできますが、PyPIで公開されていない場合などはアプリのパッケージをまるごとプロジェクトディレクトリに設置することでインストールすることもできます。この場合、パッケージ名はフォルダ名などになるかと思います。詳しくは公開者の指示に従ってください。

アプリを作ろう
=========================
Mitamaを使えば、ポータルや有志作成のアプリに加え、手軽に内製システムを実装して動かすことができます。認証システムなどを新たに実装する必要がなく、加えて組織構造に関わる機能が充実しているため、大きく工数を削減できます。加えて、インストール・アンインストールが容易なため、高速でPDCAを回すことができます。

プロジェクトディレクトリの中で、次のコマンドを実行してみましょう。

.. code-block:: bash

    $ mitama mkapp newappname
    $ ls newappname
    __init__.py  controller.py  main.py  middleware.py  modal.py  static/  templates/

たくさんファイルが生成されました。プロジェクトの :file:`mitama.json` を変更し、これをサーバーで動かしてみましょう。

.. code-block:: json

    {
        "apps": {
            "mitama.portal": {
                "path": "/"
            },
            "newappname": {
                "path": "/newapp"
            }
        }
    }

http://localhost\:8080/newapp にWelcomeページが表示されたら成功です。これを書き換えてアプリを作っていきましょう。アプリ開発のチュートリアルは 『 :doc:`tutorial` 』をご覧ください。
